# bash language server
npm i -g bash-language-server


#
curl -sL install-node.now.sh/lts | sh
curl --compressed -o- -L https://yarnpkg.com/install.sh | bash

# php 
npm i intelephense -g

<<<<<<< HEAD
# ccls 
Bear https://github.com/rizsotto/Bear
scan-build https://github.com/rizsotto/scan-build

https://ianding.io/2019/07/29/configure-coc-nvim-for-c-c++-development/


.ccls example:
clang 
%c 
-I../include
=======

ccls 
https://edward852.github.io/post/%E7%94%9F%E6%88%90compile_commands.json%E6%96%87%E4%BB%B6/
# rust 
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
:CocInstall coc-rls
>>>>>>> a684a8869e5d0e1659813c8d69735532b35e642f

CMake
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1

% cmake -H. -BDebug -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=YES
% ln -s Debug/compile_commands.json .

bear make 
# generates compile_commands.json

bear --append -o compile_commands_org.json 编译命令
然后通过 compile_cmds_replace.sh 脚本替换依赖路径。

#!/bin/bash

sed 's#/usr/local/svcfrm2#/data/dev-deps/XxxMod/svcfrm2#g' compile_commands_org.json > compile_commands.json
sed -i 's#/usr/local/commlib#/data/dev-deps/XxxMod/commlib#g' compile_commands.json

# -I单独一行，下一行还是-I
perl -i -0pe 's/"-I",\s+"-I/"-I/gms' compile_commands.json
# -I单独一行，下一行是绝对路径
perl -i -0pe 's/"-I",\s+"\//"-I\//gms' compile_commands.json
# -I单独一行，下一行是相对路径
perl -i -0pe 's/"-I",\s+"\./"-I\./gms' compile_commands.json
上面的脚本示例了如何把 XxxMod 依赖的库 svcfrm2 和 commlib 调整为开发机上对应库的路径。



ninja -C out/Release -t compdb cxx cc > compile_commands.json 


